"""empty message

Revision ID: ae00fefcfa94
Revises: 
Create Date: 2020-05-09 22:04:54.600457

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ae00fefcfa94'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('footprint_ref',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('footprint_path', sa.String(length=300), nullable=True),
    sa.Column('footprint_ref', sa.String(length=150), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('library_ref',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol_path', sa.String(length=300), nullable=True),
    sa.Column('symbol_ref', sa.String(length=150), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('component',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('mpn', sa.String(length=100), nullable=False),
    sa.Column('manufacturer', sa.String(length=100), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.Column('value', sa.String(length=100), nullable=True),
    sa.Column('package', sa.String(length=100), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('comment', sa.String(length=100), nullable=True),
    sa.Column('is_through_hole', sa.Boolean(), nullable=True),
    sa.Column('library_ref_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['library_ref_id'], ['library_ref.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('mpn', 'manufacturer', name='_mpn_manufacturer_uc')
    )
    op.create_index(op.f('ix_component_manufacturer'), 'component', ['manufacturer'], unique=False)
    op.create_index(op.f('ix_component_mpn'), 'component', ['mpn'], unique=False)
    op.create_table('bjt_transistor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('vce_sat_max', sa.String(length=30), nullable=True),
    sa.Column('hfe', sa.String(length=30), nullable=True),
    sa.Column('vce_max', sa.String(length=30), nullable=True),
    sa.Column('ic_max', sa.String(length=50), nullable=True),
    sa.Column('power_max', sa.String(length=50), nullable=True),
    sa.Column('bjt_type', sa.String(length=10), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['component.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('capacitor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tolerance', sa.String(length=30), nullable=True),
    sa.Column('voltage', sa.String(length=30), nullable=True),
    sa.Column('composition', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['component.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('component_footprint_asc',
    sa.Column('component_id', sa.Integer(), nullable=True),
    sa.Column('footprint_ref_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['component_id'], ['component.id'], ),
    sa.ForeignKeyConstraint(['footprint_ref_id'], ['footprint_ref.id'], )
    )
    op.create_table('crystal_oscillator',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('load_capacitance', sa.String(length=30), nullable=True),
    sa.Column('frequency', sa.String(length=30), nullable=True),
    sa.Column('frequency_tolerance', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['component.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('diode_rectifier',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('forward_voltage', sa.String(length=30), nullable=True),
    sa.Column('reverse_current_leakage', sa.String(length=30), nullable=True),
    sa.Column('max_forward_average_current', sa.String(length=30), nullable=True),
    sa.Column('max_reverse_vrrm', sa.String(length=30), nullable=True),
    sa.Column('diode_type', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['component.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('diode_tvs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('voltage_reverse_standoff', sa.String(length=30), nullable=True),
    sa.Column('voltage_breakdown_min', sa.String(length=30), nullable=True),
    sa.Column('voltage_clamping_max', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['component.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('diode_zener',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tolerance', sa.String(length=30), nullable=True),
    sa.Column('power_max', sa.String(length=30), nullable=True),
    sa.Column('voltage_forward', sa.String(length=30), nullable=True),
    sa.Column('voltage_zener', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['component.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ferrite_bead',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number_of_lines', sa.String(length=30), nullable=True),
    sa.Column('dc_resistance', sa.String(length=30), nullable=True),
    sa.Column('impedance_freq', sa.String(length=30), nullable=True),
    sa.Column('current_rating', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['component.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mosfet_transistor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rds_on', sa.String(length=30), nullable=True),
    sa.Column('vgs_max', sa.String(length=30), nullable=True),
    sa.Column('vgs_th', sa.String(length=30), nullable=True),
    sa.Column('vds_max', sa.String(length=30), nullable=True),
    sa.Column('ids_max', sa.String(length=30), nullable=True),
    sa.Column('power_max', sa.String(length=30), nullable=True),
    sa.Column('channel_type', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['component.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('power_inductor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tolerance', sa.String(length=30), nullable=True),
    sa.Column('resistance_dcr', sa.String(length=30), nullable=True),
    sa.Column('inductance_freq_test', sa.String(length=30), nullable=True),
    sa.Column('current_rating', sa.String(length=30), nullable=True),
    sa.Column('current_saturation', sa.String(length=30), nullable=True),
    sa.Column('core_material', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['component.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('resistor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('power_max', sa.String(length=30), nullable=True),
    sa.Column('tolerance', sa.String(length=30), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['component.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('resistor')
    op.drop_table('power_inductor')
    op.drop_table('mosfet_transistor')
    op.drop_table('ferrite_bead')
    op.drop_table('diode_zener')
    op.drop_table('diode_tvs')
    op.drop_table('diode_rectifier')
    op.drop_table('crystal_oscillator')
    op.drop_table('component_footprint_asc')
    op.drop_table('capacitor')
    op.drop_table('bjt_transistor')
    op.drop_index(op.f('ix_component_mpn'), table_name='component')
    op.drop_index(op.f('ix_component_manufacturer'), table_name='component')
    op.drop_table('component')
    op.drop_table('library_ref')
    op.drop_table('footprint_ref')
    # ### end Alembic commands ###
